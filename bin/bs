#!/usr/bin/env ruby

require 'yaml'
require 'bs'

cli_struct = {
  'make'  => 'BS::Config.make',
  'clean' => 'BS::Config.clean',
  'task' => {
    'list'   => 'BS::Task.list',
    'add'    =>  {'.+' => 'BS::Task.add'},
    'del'    =>  {'.+' => 'BS::Task.del'}
  },
  "subsystem" => {
    'list'    => 'BS::Subsysytem.list'
  },
  "sandbox"  => {
    'make'   => 'make_sandbox',
    'clean'  => 'clean_sandbox',
    'status' => 'BS::Node::Desktop.new.status'
  }
}

def print_usage
  puts 'Usage:'
  puts '  bs make'
  puts '  bs clean'
  puts ''
  puts '  bs task list'
  puts '  bs task add [git URL]'
  puts '  bs task del [task name]'
  puts ''
  puts '  bs sandbox status'
  puts '  bs sandbox make'
  puts '  bs sandbox clean'
end

def quit_on_wrong_input
  print_usage
  exit(1)
end

def make_sandbox(params)
  puts BS::Node::Desktop::CONF_FILE
  node = BS::Node::Desktop.new
  node.create
end

def clean_sandbox
   Node::Local.new.destroy
end

def parse_arguments struct
  params = []
  while (struct && (arg = ARGV.shift)) do
    struct = struct[arg]
    while (struct.is_a?(Hash) && struct.keys[0] == '.+') do
      argv = ARGV.shift
      quit_on_wrong_input unless /.+/.match(argv)
      params.push(argv)
      struct = struct['.+']
    end
  end

  if struct 
    eval "#{struct} params"
  else
    quit_on_wrong_input
  end
end

if ARGV.empty?
  # TODO: interactive CLI
  print_usage
else
  parse_arguments cli_struct
end

