#!/usr/bin/env ruby

$:.unshift '/opt/bs/lib'
require 'bs'

cli_struct = {
  'status' => 'status',
  'make'   => 'make',
  'clean'  => 'clean',
  'task' => {
    'list'   => 'BS::Task.list',
    'add'    =>  {'.+' => 'BS::Task.add'},
    'del'    =>  {'.+' => 'BS::Task.del'},
    'verify' =>  {'.+' => {'.+' => 'BS::Task.verify'}}
  },
  "subsystem" => {
    'list'    => 'BS::Subsysytem.list'
  }
}

def print_usage
  puts 'Usage:'
  puts '  bs status'
  puts '  bs make'
  puts '  bs clean'
  puts ''
  puts '  bs task list'
  puts '  bs task add [git URL]'
  puts '  bs task del [task name]'
  puts '  bs task verify [task name] [solution file]'
end

def quit_on_wrong_input
  print_usage
  exit(1)
end

def status
  puts "Binary Score status"
  BS::Node::Desktop.new.print_status
  puts ''
  BS::Task.list
end

def make
  node = BS::Node::Desktop.new
  node.create
end

def clean
   BS::Node::Desktop.new.destroy
end

def parse_arguments struct
  params = []
  while (struct && (arg = ARGV.shift)) do
    struct = struct[arg]
    while (struct.is_a?(Hash) && struct.keys[0] == '.+') do
      argv = ARGV.shift
      quit_on_wrong_input unless /.+/.match(argv)
      params.push(argv)
      struct = struct['.+']
    end
  end

  if struct 
    if params.count == 0
       eval struct
    else
      eval "#{struct} params"
    end
  else
    quit_on_wrong_input
  end
end

if ARGV.empty?
  # TODO: interactive CLI
  print_usage
else
  parse_arguments cli_struct
end

